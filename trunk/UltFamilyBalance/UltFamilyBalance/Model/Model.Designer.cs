//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Ult.FamilyBalance", "FK_CreditCount_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ult.FamilyBalance.Model.User), "CreditCount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ult.FamilyBalance.Model.CreditCount), true)]
[assembly: EdmRelationshipAttribute("Ult.FamilyBalance", "FK_Entry_EntryType", "EntryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ult.FamilyBalance.Model.EntryType), "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ult.FamilyBalance.Model.Entry), true)]
[assembly: EdmRelationshipAttribute("Ult.FamilyBalance", "FK_Entry_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ult.FamilyBalance.Model.User), "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ult.FamilyBalance.Model.Entry), true)]
[assembly: EdmRelationshipAttribute("Ult.FamilyBalance", "FK_EntryType_EntryDirection", "EntryDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Ult.FamilyBalance.Model.EntryDirection), "EntryType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ult.FamilyBalance.Model.EntryType), true)]
[assembly: EdmRelationshipAttribute("Ult.FamilyBalance", "FK_EntryType_EntryTypeGroup", "EntryTypeGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Ult.FamilyBalance.Model.EntryTypeGroup), "EntryType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Ult.FamilyBalance.Model.EntryType), true)]

#endregion

namespace Ult.FamilyBalance.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UltFamilyBalanceContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UltFamilyBalanceContext object using the connection string found in the 'UltFamilyBalanceContext' section of the application configuration file.
        /// </summary>
        public UltFamilyBalanceContext() : base("name=UltFamilyBalanceContext", "UltFamilyBalanceContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UltFamilyBalanceContext object.
        /// </summary>
        public UltFamilyBalanceContext(string connectionString) : base(connectionString, "UltFamilyBalanceContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UltFamilyBalanceContext object.
        /// </summary>
        public UltFamilyBalanceContext(EntityConnection connection) : base(connection, "UltFamilyBalanceContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditCount> CreditCounts
        {
            get
            {
                if ((_CreditCounts == null))
                {
                    _CreditCounts = base.CreateObjectSet<CreditCount>("CreditCounts");
                }
                return _CreditCounts;
            }
        }
        private ObjectSet<CreditCount> _CreditCounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entry> Entries
        {
            get
            {
                if ((_Entries == null))
                {
                    _Entries = base.CreateObjectSet<Entry>("Entries");
                }
                return _Entries;
            }
        }
        private ObjectSet<Entry> _Entries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntryDirection> EntryDirections
        {
            get
            {
                if ((_EntryDirections == null))
                {
                    _EntryDirections = base.CreateObjectSet<EntryDirection>("EntryDirections");
                }
                return _EntryDirections;
            }
        }
        private ObjectSet<EntryDirection> _EntryDirections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntryType> EntryTypes
        {
            get
            {
                if ((_EntryTypes == null))
                {
                    _EntryTypes = base.CreateObjectSet<EntryType>("EntryTypes");
                }
                return _EntryTypes;
            }
        }
        private ObjectSet<EntryType> _EntryTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntryTypeGroup> EntryTypeGroups
        {
            get
            {
                if ((_EntryTypeGroups == null))
                {
                    _EntryTypeGroups = base.CreateObjectSet<EntryTypeGroup>("EntryTypeGroups");
                }
                return _EntryTypeGroups;
            }
        }
        private ObjectSet<EntryTypeGroup> _EntryTypeGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditCounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditCounts(CreditCount creditCount)
        {
            base.AddObject("CreditCounts", creditCount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntries(Entry entry)
        {
            base.AddObject("Entries", entry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntryDirections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntryDirections(EntryDirection entryDirection)
        {
            base.AddObject("EntryDirections", entryDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntryTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntryTypes(EntryType entryType)
        {
            base.AddObject("EntryTypes", entryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntryTypeGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntryTypeGroups(EntryTypeGroup entryTypeGroup)
        {
            base.AddObject("EntryTypeGroups", entryTypeGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ult.FamilyBalance", Name="CreditCount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditCount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditCount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="incoming">Initial value of the Incoming property.</param>
        /// <param name="entries">Initial value of the Outgoing property.</param>
        /// <param name="dateInsert">Initial value of the DateInsert property.</param>
        public static CreditCount CreateCreditCount(global::System.Int32 id, global::System.Int32 year, global::System.Int32 month, global::System.Decimal incoming, global::System.Decimal outgoing, global::System.DateTime dateInsert)
        {
            CreditCount creditCount = new CreditCount();
            creditCount.Id = id;
            creditCount.Year = year;
            creditCount.Month = month;
            creditCount.Incoming = incoming;
            creditCount.Outgoing = outgoing;
            creditCount.DateInsert = dateInsert;
            return creditCount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Incoming
        {
            get
            {
                return _Incoming;
            }
            set
            {
                OnIncomingChanging(value);
                ReportPropertyChanging("Incoming");
                _Incoming = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Incoming");
                OnIncomingChanged();
            }
        }
        private global::System.Decimal _Incoming;
        partial void OnIncomingChanging(global::System.Decimal value);
        partial void OnIncomingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Outgoing
        {
            get
            {
                return _Outgoing;
            }
            set
            {
                OnOutgoingChanging(value);
                ReportPropertyChanging("Outgoing");
                _Outgoing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Outgoing");
                OnOutgoingChanged();
            }
        }
        private global::System.Decimal _Outgoing;
        partial void OnOutgoingChanging(global::System.Decimal value);
        partial void OnOutgoingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        protected global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Balance;
        partial void OnBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateInsert
        {
            get
            {
                return _DateInsert;
            }
            set
            {
                OnDateInsertChanging(value);
                ReportPropertyChanging("DateInsert");
                _DateInsert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInsert");
                OnDateInsertChanged();
            }
        }
        private global::System.DateTime _DateInsert;
        partial void OnDateInsertChanging(global::System.DateTime value);
        partial void OnDateInsertChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_CreditCount_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Ult.FamilyBalance.FK_CreditCount_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Ult.FamilyBalance.FK_CreditCount_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Ult.FamilyBalance.FK_CreditCount_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Ult.FamilyBalance.FK_CreditCount_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ult.FamilyBalance", Name="Entry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="day">Initial value of the Day property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="dateInsert">Initial value of the DateInsert property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Entry CreateEntry(global::System.Int32 id, global::System.Decimal amount, global::System.Int32 year, global::System.Int32 month, global::System.Int32 day, global::System.DateTime date, global::System.DateTime dateInsert, global::System.Int32 userId)
        {
            Entry entry = new Entry();
            entry.Id = id;
            entry.Amount = amount;
            entry.Year = year;
            entry.Month = month;
            entry.Day = day;
            entry.Date = date;
            entry.DateInsert = dateInsert;
            entry.UserId = userId;
            return entry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        protected global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateInsert
        {
            get
            {
                return _DateInsert;
            }
            set
            {
                OnDateInsertChanging(value);
                ReportPropertyChanging("DateInsert");
                _DateInsert = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInsert");
                OnDateInsertChanged();
            }
        }
        private global::System.DateTime _DateInsert;
        partial void OnDateInsertChanging(global::System.DateTime value);
        partial void OnDateInsertChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdate
        {
            get
            {
                return _DateUpdate;
            }
            set
            {
                OnDateUpdateChanging(value);
                ReportPropertyChanging("DateUpdate");
                _DateUpdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdate");
                OnDateUpdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdate;
        partial void OnDateUpdateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            protected get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_Entry_EntryType", "EntryType")]
        public EntryType Type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryType>("Ult.FamilyBalance.FK_Entry_EntryType", "EntryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryType>("Ult.FamilyBalance.FK_Entry_EntryType", "EntryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntryType> TypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryType>("Ult.FamilyBalance.FK_Entry_EntryType", "EntryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntryType>("Ult.FamilyBalance.FK_Entry_EntryType", "EntryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_Entry_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Ult.FamilyBalance.FK_Entry_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Ult.FamilyBalance.FK_Entry_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Ult.FamilyBalance.FK_Entry_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Ult.FamilyBalance.FK_Entry_User", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ult.FamilyBalance", Name="EntryDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntryDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntryDirection object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="multiplier">Initial value of the Multiplier property.</param>
        public static EntryDirection CreateEntryDirection(global::System.Int32 id, global::System.String name, global::System.Int32 multiplier)
        {
            EntryDirection entryDirection = new EntryDirection();
            entryDirection.Id = id;
            entryDirection.Name = name;
            entryDirection.Multiplier = multiplier;
            return entryDirection;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private global::System.Int32 _Multiplier;
        partial void OnMultiplierChanging(global::System.Int32 value);
        partial void OnMultiplierChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ult.FamilyBalance", Name="EntryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntryType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="noteRequired">Initial value of the NoteRequired property.</param>
        public static EntryType CreateEntryType(global::System.Int32 id, global::System.String name, global::System.Byte noteRequired)
        {
            EntryType entryType = new EntryType();
            entryType.Id = id;
            entryType.Name = name;
            entryType.NoteRequired = noteRequired;
            return entryType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        protected global::System.Int32 DirectionId
        {
            get
            {
                return _DirectionId;
            }
            set
            {
                OnDirectionIdChanging(value);
                ReportPropertyChanging("DirectionId");
                _DirectionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionId");
                OnDirectionIdChanged();
            }
        }
        private global::System.Int32 _DirectionId;
        partial void OnDirectionIdChanging(global::System.Int32 value);
        partial void OnDirectionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NoteRequired
        {
            get
            {
                return _NoteRequired;
            }
            set
            {
                OnNoteRequiredChanging(value);
                ReportPropertyChanging("NoteRequired");
                _NoteRequired = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoteRequired");
                OnNoteRequiredChanged();
            }
        }
        private global::System.Byte _NoteRequired;
        partial void OnNoteRequiredChanging(global::System.Byte value);
        partial void OnNoteRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        protected Nullable<global::System.Int32> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_Entry_EntryType", "Entry")]
        public EntityCollection<Entry> Entries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entry>("Ult.FamilyBalance.FK_Entry_EntryType", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entry>("Ult.FamilyBalance.FK_Entry_EntryType", "Entry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_EntryType_EntryDirection", "EntryDirection")]
        public EntryDirection Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryDirection>("Ult.FamilyBalance.FK_EntryType_EntryDirection", "EntryDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryDirection>("Ult.FamilyBalance.FK_EntryType_EntryDirection", "EntryDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntryDirection> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryDirection>("Ult.FamilyBalance.FK_EntryType_EntryDirection", "EntryDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntryDirection>("Ult.FamilyBalance.FK_EntryType_EntryDirection", "EntryDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_EntryType_EntryTypeGroup", "EntryTypeGroup")]
        public EntryTypeGroup Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryTypeGroup>("Ult.FamilyBalance.FK_EntryType_EntryTypeGroup", "EntryTypeGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryTypeGroup>("Ult.FamilyBalance.FK_EntryType_EntryTypeGroup", "EntryTypeGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntryTypeGroup> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntryTypeGroup>("Ult.FamilyBalance.FK_EntryType_EntryTypeGroup", "EntryTypeGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntryTypeGroup>("Ult.FamilyBalance.FK_EntryType_EntryTypeGroup", "EntryTypeGroup", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ult.FamilyBalance", Name="EntryTypeGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntryTypeGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntryTypeGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EntryTypeGroup CreateEntryTypeGroup(global::System.Int32 id, global::System.String name, global::System.String description)
        {
            EntryTypeGroup entryTypeGroup = new EntryTypeGroup();
            entryTypeGroup.Id = id;
            entryTypeGroup.Name = name;
            entryTypeGroup.Description = description;
            return entryTypeGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Ult.FamilyBalance", "FK_EntryType_EntryTypeGroup", "EntryType")]
        public EntityCollection<EntryType> Types
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntryType>("Ult.FamilyBalance.FK_EntryType_EntryTypeGroup", "EntryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntryType>("Ult.FamilyBalance.FK_EntryType_EntryTypeGroup", "EntryType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Ult.FamilyBalance", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="salt">Initial value of the Salt property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String salt, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Salt = salt;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.String _Salt;
        partial void OnSaltChanging(global::System.String value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();

        #endregion
    
    }

    #endregion
    
}
